// 1-bit ALU template
module alu1bit (
    input logic a,           // Input bit a
    input logic b,           // Input bit b
    input logic cin,         // Carry in
    input logic [1:0] op,    // Operation
    output logic s,          // Output S
    output logic cout        // Carry out
);

	logic out0, out1, out2, out3;
	logic fas_0, mux4_1;

	NOT #(
		.Tpdhl(6), .Tpdlh(6)
	)g3(
		.A(op[0]),
		.Z(out3)
	);
	fas f(
		.a(a),
		.b(b),
		.cin(cin),
		.cout(cout),
		.a_ns(out3),
		.s(fas_0)
	);
	OR2 #(
		.Tpdhl(10), .Tpdlh(10)
	)g1(
		.A(b),
		.B(a),
		.Z(out1)
	);
	XOR2 #(
		.Tpdhl(9), .Tpdlh(9)
	)g0(
		.A(b),
		.B(a),
		.Z(out0)
	);
	NOT #(
		.Tpdhl(6), .Tpdlh(6)
	)g2(
		.A(out1),
		.Z(out2)
	);
	mux4 m(
		.d0(out2),
		.d1(out0),
		.d2(fas_0),
		.d3(fas_0),
		.sel(op)
	);
endmodule
